#version 450
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_shader_explicit_arithmetic_types : enable

layout (local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2 ) in;

struct InstanceData
{
   uint8_t mol_s[2];   //  2
   uint8_t iso_s[1];   //  3
   uint8_t v[12];      // 15
   uint8_t _pad1[146]; //161
};

layout(std430, binding = 0) readonly buffer SSBO1 {
   InstanceData inarr[];  
};

layout(std430, binding = 1) writeonly buffer SSBO2 {
   float outarr[];
};

void main(){
	uint8_t zero = uint8_t(48);
	uint k = gl_GlobalInvocationID.x;
	InstanceData data = inarr[k];
	
    float mult = 1e-6;
	float res = (data.v[11] - zero)*mult;
	
	for (int i=11; i>=6; i--){
		res += float(data.v[i] - zero) * mult;
		mult *= 10.0;
	}
    
    for (int i=4; i>=0; i--){
		res += float(data.v[i] == 32 ? 0 : data.v[i] - zero) * mult;
		mult *= 10.0;
	}
    
	outarr[k] = res;
}

